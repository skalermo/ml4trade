@startuml

hide empty methods
hide empty fields

title ml4trade structure

interface gym_anytrading.TradingEnv {
  reset()
  step(action)
}

class ml4trade.Unit {
  value: float
}

class ml4trade.MW
class ml4trade.MWh
class ml4trade.Currency

class ml4trade.SimulationEnv {
  SimulationClock: clock
  --
  _simulate_day(action)
  _setup_systems()
  run_in_random_order()
}

class ml4trade.DataStrategies {
  preprocess_data()
  process()
  observation() -> list[float]
}

class ml4trade.ConsumptionStrategy {
  preprocess_data()
  process()
  observation() -> list[MWh]
}

class ml4trade.ProductionStrategy {
  preprocess_data()
  process()
  observation() -> list[MWh]
}

class ml4trade.EnergyMarketStrategy {
  preprocess_data()
  process()
  observation() -> list[Currency]
}

class ml4trade.SimulationClock {
  tick()
  is_it_scheduling_hour()
  is_it_action_replacement_hour()
}

class ml4trade.EnergyMarket {
  buy(amount: MWh, price: Currency)
  sell(amount: MWh, price: Currency)
  observation() -> list[Currency]
}

class ml4trade.Prosumer {
  wallet: Currency
  energy_market: EnergyMarket
  battery: Battery
  energy_systems: list[EnergySystem]
  ---
  _buy(amount: MWh, price: Currency, scheduled: bool)
  _sell(amount: MWh, price: Currency, scheduled: bool)
  ---
  consume_energy()
  produce_energy()
  send_scheduled_transaction()
  schedule_new_transactions(action)
}

class ml4trade.EnergySystem {
  systems: list[ProductionSystem, ConsumptionSystem]

  get_production_power(date: Date) -> MW
  fet_consumption_power(date: Date) -> MW
}

class ml4trade.ProductionSystem {
  calculate_power(date: Date) -> MW
  observation() -> list[MWh]
}
class ml4trade.ConsumptionSystem {
  calculate_power(date: Date) -> MW
  observation() -> list[MWh]
}

class ml4trade.Battery {
  capacity: MWh
  current_charge: MWh
  efficiency: float
  
  charge(amount: MWh) -> MWh
  discharge(amount: MWh) -> MWh
}

class ml4trade.Wallet {
  deposit(amount: Currency)
  withdraw(amount: Currency)
}

ml4trade.Unit <|-- ml4trade.MW
ml4trade.Unit <|-- ml4trade.MWh
ml4trade.Unit <|-- ml4trade.Currency

gym_anytrading.TradingEnv <|-- ml4trade.SimulationEnv
ml4trade.SimulationEnv "1" *-- "1" ml4trade.EnergyMarket
ml4trade.SimulationEnv "1" *-- "1" ml4trade.Prosumer
ml4trade.SimulationEnv "1" *-- "1" ml4trade.SimulationClock
ml4trade.Prosumer "1" *-- "1" ml4trade.Battery
ml4trade.Prosumer "1" *-- "1" ml4trade.EnergySystem
ml4trade.Prosumer "1" *-- "1" ml4trade.Wallet
ml4trade.EnergySystem "1" *-- "n" ml4trade.ProductionSystem
ml4trade.EnergySystem "1" *-- "n" ml4trade.ConsumptionSystem

ml4trade.DataStrategies <|-- ml4trade.ConsumptionStrategy
ml4trade.DataStrategies <|-- ml4trade.ProductionStrategy
ml4trade.DataStrategies <|-- ml4trade.EnergyMarketStrategy
ml4trade.ConsumptionStrategy "1" *-- "1" ml4trade.ConsumptionSystem
ml4trade.ProductionStrategy "1" *-- "1" ml4trade.ProductionSystem
ml4trade.EnergyMarketStrategy "1" *-- "1" ml4trade.EnergyMarket

@enduml
